html, body {
    height: 100%;
    font-size: 15px;
}

b {
    font-weight: 500;
}

app-root {
    height: 100%;
}

.jumbotron {
    padding: 2rem 2rem;
}

.vbox {
    display: flex;
    flex-flow: column;
    flex: 1;
    min-height: 0;
    min-width: 0;
}

.hbox {
    display: flex;
    flex-flow: row;
    flex: 1;
    min-height: 0;
    min-width: 0;
}

.pageComponent {
    flex: 1;
    min-height: 0;
    display: flex;
    overflow-y: hidden;
}
.pageComponent > div.container, .pageComponent > div.container-fluid {
    display: flex;
    flex-direction: column;
}

.footer {
    width: 100%;
    height: 40px;
}

.scrollableContainer {
    padding: 4px;
    overflow: auto;
    flex: 1;
    min-height: 0;
    display: flex;
    flex-flow: column;
}
/* restore the modal-body padding when scrollableContainer is applied to the same div */
.modal-body.scrollableContainer {
    padding: 1rem;
}

.expandCollapseBtnContainer > img {
    cursor: pointer;
}

/* To apply to the arrow.png image (that points down) in order to change orientation */
.arrow-left {
    transform: rotate(90deg);
}
.arrow-up {
    transform: rotate(180deg);
}
.arrow-right {
    transform: rotate(270deg);
}

input.invalid, input.invalid:focus {
    background: #ffaaaa;
}

rdf-resource {
    font-size: 12px;
    line-height: 12px;
    min-height: 16px;
    display: inline-flex;
    align-items: center;
    border-radius: 2px;
}
rdf-resource > .rdfResourceIcon {
    width: 16px;
    height: 16px;
}
rdf-resource > .rdfResourceText {
    border: 1px solid transparent;
    border-radius: 4px;
    padding: 4px;
    margin-left: 2px;
    margin-right: 6px;
}

.proposedAddRes {
    background-color: #dff0d8;
    color: #3c763d;
    border-color: #d6e9c6 !important;
}
.proposedRemoveRes {
    background-color: #f2dede;
    color: #a94442;
    border-color: #ebccd1 !important;
}
.proposedAddTriple {
    color: green;
    font-style: italic;
}
.proposedRemoveTriple {
    color: darkred;
    text-decoration: line-through;
}

.flagIcon {
    position: relative;
    display: inline-block;
    font-family: Arial, Helvetica, sans-serif;
    font-weight: bold;
    font-size: 10px;
    line-height: 1;
}
.flagIcon > span {
    position: absolute;
    top: 1px;
    left: 0px;
    width: 16px;
    margin: 0 auto;
    user-select: none;
    white-space: nowrap;
    overflow: hidden;
    text-align: center;
    vertical-align: middle;
}

/* Ellipsis of the content of a rdf-resource in a card-header (heading of ResView) */
.card-header rdf-resource > span {
	max-width: 200px;
	overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
}

.structureComponent {
    display: flex;
    flex-flow: column;
    flex: 1;
    min-height: 0;
    min-width: 0;
}
.structureComponent .card-body {
    padding: 0px;
}
.structureComponent rdf-resource:hover {
    background-color: #e5f3ff;
}

.treeNode {
    min-height: 24px;
    margin: 2px 0px;
    display: flex;
    align-items: center;
    position: relative; /* for positioning 'absolute' children (instNum label in classTreeNode) */
}
.treeNode .expandCollapseBtnContainer {
    min-width: 16px;
}
.treeNode rdf-resource {
    flex: 1;
    min-height: 24px;
    cursor: pointer;
}

.subTree {
	padding-left:15px;
}

.listNodeItem {
    display: flex;
    align-items: center;
    min-height: 24px;
}

.listNodeItem input {
    min-width: 13px;
}

.listNodeItem rdf-resource {
	border-radius: 2px;
	flex: 1;
}

.selectedResource {
    background-color: #cde8ff !important;
    border: 1px solid #7bc3ff !important;
}


.listItem {
    padding: 3px;
    width: 100%;
    min-height: 24px;
    display: flex;
    align-items: center;
}
.listItem:hover {
    background-color: #e5f3ff;
}
.listItem.active {
    background-color: #cde8ff;
}
.listItem rdf-resource {
	border-radius: 2px;
	flex: 1;
}
.listItem.disabled {
    cursor: not-allowed;
    color: #999;
}

.clickable:hover {
    cursor: pointer;
}

/* Disable events when clicking on a disabled link */
a.disabled {
    pointer-events: none;
    opacity: .7;
}

/* ====================== */

/* YASQE extension */

.yasqe {
    display: flex;
    flex-flow: column;
    flex: 1;
    min-height: 0;
    min-width: 0;
}
.yasqe .CodeMirror {
    height: 100%;
}

/* Reset height to auto when codemirror is fullscreen */
.CodeMirror.CodeMirror-fullscreen { height: auto !important }
/* To put codemirror in fullscreen in front of the menubar (default z-index 7 made the textarea behind the navbar) */
.yasqe .CodeMirror-fullscreen { z-index: 999 !important; }

/* Bootstrap extension */

.btn-group-xs > .btn, .btn-xs {
    padding  : .2rem .2rem;
    font-size  : .75rem;
    line-height  : 1;
    border-radius : .2rem;
}

.form-control-xs {
    height: 22px;
    padding: 1px 5px;
    font-size: 11px;
    line-height: 1.5;
    border-radius: 3px;
}

/* when a table-hoverable is nested within another one, add the class table-hoverable-nested to avoid that selection is inherited by the inner table */
.table-hoverable tbody tr:hover .table-hoverable.table-hoverable-nested td {
    background-color: transparent !important;
}

.table-borderless tbody tr td, .table-borderless tbody tr th, .table-borderless thead tr th {
    border: none;
}
.table {
    margin-bottom: 0px;
}

.form-check-label-sm {
    font-size: .875rem;
    line-height: 1.5;
}

/* Bootstrap override */

sparql-component .nav-tabs>li>a {
    cursor: default;
}

label {
    margin-bottom: 0px;
}

.alert {
    margin-bottom: 0px;
}

/* class for positioning the close "x" in a multiline dismissible alert at the top right corner */
.alert-multiline.alert-dismissible {
    position: relative
}
.alert-multiline.alert-dismissible > .close {
    position: absolute;
    top: 4px;
    right: 6px;
}

.tab-content {
    flex: 1;
    display: flex;
    flex-flow: column;
    min-height: 0px;
    padding: 0px;
}
.tab-pane {
    flex: 1;
    display: flex;
    flex-flow: column;
    min-height: 0px;
    padding: 4px;
}
.tab-pane.active {
    display: flex !important;
}

ul.nav-tabs {
    padding-left: 3px;
    padding-top: 3px;
}

.nav-tabs>li>a {
    font-size: 14px;
    padding: 8px;
}

.card-header {
    padding: 6px 8px;
}
.card-body {
    padding: 6px;
}
.card-footer {
    padding: 6px;
}
/*
    When a card header contains a button or a toolbar with size sm, its height grow at 41.5px
    This style forces the height of a header that doesn't contain buttons and it's useful when it needs to be aligned 
    to another card which its header contains buttons (otherwise the headers height would be different causing an ugly effect).
 */
.card-header-btn-sm {
    min-height: 41px;
    display: flex;
    align-items: center;
}

.dropdown-item {
    padding: 3px 10px;
}

.dropdown-toggle.dropdown-no-arrow::after {
    display:none;
}

.modal-dialog {
    width: 600px;
    max-width: 600px;
}
.modal-full.modal-dialog {
    width: 95% !important;
    max-width: 95% !important;
}
.modal-lg {
    width: 900px !important;
    max-width: initial;
}
.modal-xl {
    width: 1140px !important;
    max-width: initial;
}

/* Following modal classe overrides are in order to avoid that modals exceed window height */
.modal-header {
    display: block; /* override the flex */
}
.modal-title {
    display: inline-block
}
.modal-body {
    display: flex;
    flex-flow: column;
    min-height: 0;
}
.modal-footer {
    display: block;
    text-align: right;
}

/* 
The following rules ensure that the dialogs fill (at max) up to 95% of the video height (95vh).
In order to let the content of the modal fill the available space (independently from its content), invoke UIUtils.setFullSizeModal()
*/
ngb-modal-window.modal { 
    /* .modal selector is added in order to increse the specifity of the rule 
        and override the display: block of the d-block class applied to ngb-modal-window */
    display: flex !important;
    flex-flow: column;
    min-height: 0;
    min-width: 0;
}
.modal-content {
    display: flex !important;
    flex-flow: column;
    min-height: 0;
    min-width: 0;
}
.modal-content > * {
    display: flex;
    flex-flow: column;
    flex: 1;
    min-height: 0;
    min-width: 0;
}
.modal-dialog {
    margin: 15px auto;
    display: flex !important;
    flex-flow: column;
    flex: 1;
    min-height: 0;
    min-width: 0;
}

/* reduce font size of item in dropdown with size sm */
.btn-group-sm .dropdown-item {
    font-size: .875rem;
}

.dropdown-menu-sm {
    padding: .125rem 0 !important;
}
.dropdown-menu-sm > .dropdown-divider {
    margin: .125rem 0 0 !important;
}